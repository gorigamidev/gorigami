<section id="contact-form">
    <form id="form-contact" method="POST" >
        <h2>¡Contáctanos!</h2>
        <fieldset class="user-box">
            <input type="text" id="name" name="name" placeholder="Nombre" required>
        </fieldset>
        <fieldset class="user-box">
            <input type="email" name="email" id="email" placeholder="Correo" required>
        </fieldset>
        <fieldset class="user-box">
            <select name="options" id="options">
                <option value="landing">Landing</option>
                <option value="e-commerce">E-Commerce</option>
                <option value="e-learning">E-Learning</option>
                <option value="crm">CRM</option>
                <option value="custom-Software">Software a la medida</option>
                <option value="consulting">Asesoria</option>
                <option value="other">Otro</option>
            </select>
        </fieldset>
        <fieldset class="user-box">
            <textarea name="detail" id="detail" placeholder="Detalles" required></textarea>
        </fieldset>
        <button id="button-send" class="button now-send" type="submit">Enviar Mensaje</button>
    </form>
</section>
<script type="text/javascript">
    const formContact = document.getElementById('contact-form');
    const buttonSend = document.getElementById('button-send');
    const serviceID = "gorigami_service_gmail";
    const templateID = "contacto_landing";
    const userID = "C76yUteJqea_6GP_K";

    formContact.addEventListener('submit', async function(event) {
        event.preventDefault();

        // Disable the form to prevent further submissions
        formContact.style.pointerEvents = 'none';
        const template_params = {
            name: document.getElementById('name').value,
            email: document.getElementById('email').value,
            detail: document.getElementById('detail').value,
            options: document.getElementById('options').value,
        }
        // Display loader state
        buttonSend.innerHTML = "";
        buttonSend.classList.remove("now-send");
        buttonSend.classList.add("loader");

        try {
            // Send the email using fetch
            const response = await fetch('https://api.emailjs.com/api/v1.0/email/send', {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    service_id: serviceID,
                    template_id: templateID,
                    user_id: userID,
                    template_params: template_params,
                }),
            });

            if (response.ok) {
                // Display 'Enviado' on success
                buttonSend.classList.remove("loader");
                buttonSend.classList.add("sent");
                buttonSend.innerHTML = "Enviado";
                document.getElementById('name').value = ""
                document.getElementById('email').value = ""
                document.getElementById('detail').value = ""
                document.getElementById('options').value = ""
            } else {
                // Handle error response
                console.error("Error sending email");
            }
        } catch (error) {
            // Handle fetch error
            console.error("Error sending email:", error);
        }

        // Reset the button state and enable the form after a delay
        setTimeout(() => {
            buttonSend.classList.remove("sent");
            buttonSend.classList.add("now-send");
            buttonSend.innerHTML = "Enviar Mensaje";
        }, 2000);

        
        window.location.reload();
    });
</script>

<style>
    #contact-form {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        padding: 1rem;
        width: 100%;
        height: 100%;
        margin-top: 1rem;
        background: var(--dark-color);
    }
    #contact-form>form{
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center; 
        padding: 2rem;
        width: 100%;
        height: auto;
        font-size: 1.5rem;
        margin-bottom: 3rem;
        border-radius: 1rem;
        border-bottom: var(--ligth-color) .1rem solid;
        background-color: #e7edee21 ;
        box-shadow: 0 0 2rem 0 rgba( 31, 38, 135, 0.37 );
    }
    #contact-form>form>h2{
        width: 100% !important;
        margin-bottom: 1.5rem;
    }
    .user-box{
        width: 100%;
        position: relative;
        border: none;
    }
    .user-box>input, .user-box>select, .user-box>textarea{
        width: 100%;
        padding: 1rem 0.2rem;
        font-size: 1.2rem;
        color: var(--ligth-color) !important;
        height: 3.5rem;
        margin-bottom: 2.5rem;
        outline: none;
        background: transparent !important; 
        border: none;
        outline: none;
        border-radius: .5rem .5rem 0 0;
        border-bottom: 1px solid var(--ligth-color);
    }
    .user-box>select option{
        background-color: var(--dark-color);
        font-family: var(--secondary-font);
    }
    .user-box>textarea{
        height: 12rem;
        padding: .2rem .2rem;
        vertical-align: top;
        resize: none;
    }
    .user-box>input::placeholder, .user-box>select::placeholder, .user-box>textarea::placeholder{
        color: var(--ligth-color) !important;
        font-family: var(--secondary-font) !important;
        border-bottom: 1px solid transparent;
    }
    .user-box>input:focus, .user-box>select:focus, .user-box>textarea:focus, .user-box>input:valid, .user-box>select:valid, .user-box>textarea:valid{
        background: transparent !important;
        border-bottom: 1px solid var(--purple-color);
        font-family: var(--secondary-font);
    }
    .user-box>input:focus::placeholder, .user-box>select:focus::placeholder, .user-box>textarea:focus::placeholder{
        color: var(--ligth-color);
    }
    .user-box>input:invalid, .user-box>textarea:invalid{
        border-bottom: 1px solid #d66688 !important;
    }
    .user-box>input:-webkit-autofill, .user-box>input:-webkit-autofill:hover, .user-box>input:-webkit-autofill:focus, .user-box>input:-webkit-autofill:active{
        background: transparent !important;
        color: var(--ligth-color) !important;
    }
    .user-box>input:-internal-autofill-selected, .user-box>input:-internal-autofill-selected:hover, .user-box>input:-internal-autofill-selected:focus, .user-box>input:-internal-autofill{
        appearance: none;
        background: transparent !important;
        color: var(--ligth-color) !important;
    }
    .button{
        height: auto;
        width: 100%;
        text-decoration: none;
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 1rem 2rem;
        border-radius: 1rem;
        font-size: 1.4rem;
        font-weight: bold;
        cursor: pointer;
        border: .2rem solid transparent;
    }
    .button:hover{
        transform: translateY(-.2rem);
        box-shadow: 0 .5rem 2rem 0 rgba( 51, 78, 185, 0.7 );
    }
    .now-send{
        background: var(--orange-color);
        color: var(--dark-color);
    }
    .now-send:hover{
        border: var(--orange-color) solid 0.2rem;
        background: var(--dark-color);
        color: var(--orange-color);
    }
    .sending{
        background: transparent;
        border: var(--purple-color) solid 0.2rem;
    }
    .sending:hover, .send-ckeck:hover{
        transform: none;
        box-shadow: none;
        cursor: auto;
    }
    .send-ckeck{
        background: green;
        color: var(--dark-color);
    }
    .loader {
        width: 2rem;
        height: 2rem;
        position: relative;
        border-radius: 50%;
        color: var(--purple-color);
        animation: fill 1s ease-in infinite alternate;
    }
    .loader::before , .loader::after {
        content: '';
        position: absolute;
        height: 100%;
        width: 100%;
        border-radius: 50%;
        left: 48px;
        top: 0;
        animation: fill 0.9s ease-in infinite alternate;
    }
    .loader::after {
        left: auto;
        right: 48px;
        animation-duration: 1.1s;
    }

@keyframes fill {
    0% {  box-shadow: 0 0 0 2px inset }
    100%{ box-shadow: 0 0 0 10px inset }
}
@media screen and (max-width: 700px){
    #contact-form {
        padding: .5rem;
    }
    #contact-form>form{
        padding: 1rem 0.7rem;
    }

}
  
</style>